{"version":3,"file":"index.js","sources":["../src/slate/MaterialEditor.js","../src/plugins/withBase.js","../src/plugins/withMarks.js","../src/plugins/withBlocks.js","../src/slate/createMaterialEditor.js","../src/plugins/withComments.js","../src/plugins/withEndnotes.js","../src/plugins/withCounter.js","../src/plugins/withLinks.js","../src/slate-react/MaterialSlate.jsx","../node_modules/is-hotkey/lib/index.js","../src/slate-react/defaultRenderElement.js","../src/slate-react/defaultRenderLeaf.js","../src/slate-react/defaultHotkeys.js","../src/slate-react/MaterialEditable.jsx","../node_modules/@babel/runtime/helpers/interopRequireDefault.js","../node_modules/@mui/icons-material/utils/createSvgIcon.js","../node_modules/@mui/icons-material/CropSquareOutlined.js","../src/components/Buttons/ToolbarButton.jsx","../node_modules/@mui/icons-material/FormatBold.js","../src/components/Buttons/BoldButton.jsx","../node_modules/@mui/icons-material/FormatItalicOutlined.js","../src/components/Buttons/ItalicButton.jsx","../node_modules/@mui/icons-material/FormatUnderlined.js","../src/components/Buttons/UnderlinedButton.jsx","../node_modules/@mui/icons-material/StrikethroughS.js","../src/components/Buttons/StrikethroughButton.jsx","../node_modules/@mui/icons-material/Code.js","../src/components/Buttons/CodeButton.jsx","../node_modules/@mui/icons-material/FormatListBulleted.js","../src/components/Buttons/BulletedListButton.jsx","../node_modules/@mui/icons-material/FormatListNumbered.js","../src/components/Buttons/NumberedListButton.jsx","../src/components/Toolbars/Toolbar.jsx","../src/components/Toolbars/HoveringToolbar.jsx","../src/components/Buttons/ButtonSeparator.jsx","../src/components/SimpleDialog.jsx","../node_modules/@mui/icons-material/AddCommentOutlined.js","../src/components/Buttons/AddCommentButton.jsx","../node_modules/@mui/icons-material/CallToActionOutlined.js","../src/components/Buttons/EndnoteButton.jsx","../node_modules/@mui/icons-material/Link.js","../src/components/Buttons/LinkButton.jsx","../src/components/Elements/CommentElement.jsx","../src/components/Elements/EndnoteElement.jsx","../src/components/Counters/WordCounter.jsx","../src/components/Counters/CharCounter.jsx"],"sourcesContent":["import { Editor } from 'slate'\r\n\r\nconst MaterialEditor = {\r\n    ...Editor,\r\n}\r\n\r\nexport default MaterialEditor","import MaterialEditor from '../slate/MaterialEditor'\r\nimport { Range } from 'slate'\r\nimport { Transforms } from 'slate'\r\nimport { Node } from 'slate'\r\nimport { ReactEditor } from 'slate-react'\r\n/**\r\n *\r\n * Base plugin for Material Slate.\r\n *\r\n * All other plugins assume this plugin exists and has been included.\r\n *\r\n * @param {Editor} editor\r\n */\r\nconst withBase = editor => {\r\n  /**\r\n   * Is the current editor selection a range, that is the focus and the anchor are different?\r\n   *\r\n   * @returns {boolean} true if the current selection is a range.\r\n   */\r\n  editor.isSelectionExpanded = () => {\r\n    return editor.selection ? Range.isExpanded(editor.selection) : false\r\n  }\r\n\r\n  /**\r\n   * Returns true if current selection is collapsed, that is there is no selection at all\r\n   * (the focus and the anchor are the same).\r\n   *\r\n   * @returns {boolean} true if the selection is collapsed\r\n   */\r\n  editor.isSelectionCollapsed = () => {\r\n    return !editor.isSelectionExpanded()\r\n  }\r\n\r\n  /**\r\n   * Is the editor focused?\r\n   * @returns {boolean} true if the editor has focus. */\r\n  editor.isFocused = () => {\r\n    return ReactEditor.isFocused(editor)\r\n  }\r\n\r\n  /**\r\n   * Unwraps any node of `type` within the current selection.\r\n   */\r\n  editor.unwrapNode = type => {\r\n    Transforms.unwrapNodes(editor, { match: n => n.type === type })\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {string} type type of node to be checked. Example: `comment`, `numbered-list`\r\n   *\r\n   * @returns {bool} true if within current selection there is a node of type `type`\r\n   */\r\n  editor.isNodeTypeActive = type => {\r\n    const [node] = MaterialEditor.nodes(editor, { match: n => n.type === type })\r\n    return !!node\r\n  }\r\n\r\n  /**\r\n   * Variable for holding a selection may be forgotten.\r\n   */\r\n  editor.rememberedSelection = {}\r\n\r\n  /**\r\n   * Gets current selection and stores it in rememberedSelection.\r\n   *\r\n   * This may be useful when you need to open a dialog box and the editor loses the focus\r\n   */\r\n  editor.rememberCurrentSelection = () => {\r\n    editor.rememberedSelection = editor.selection\r\n  }\r\n\r\n  /**\r\n   * Is the current selection collapsed?\r\n   */\r\n  editor.isCollapsed = () => {\r\n    const { selection } = editor\r\n    //console.log('selection', selection)\r\n    return selection && Range.isCollapsed(selection)\r\n  }\r\n\r\n  /**\r\n   * Wraps a selection with an argument. If `wrapSelection` is not passed\r\n   * uses current selection\r\n   *\r\n   * Upon wrapping moves the cursor to the end.\r\n   *\r\n   * @param {Node} node the node to be added\r\n   * @param {Selection} wrapSelection selection of the text that will be wrapped with the node.\r\n   *\r\n   */\r\n  editor.wrapNode = (node, wrapSelection = null) => {\r\n    //if wrapSelection is passed => we use it. Use editor selection in other case\r\n    editor.selection = wrapSelection ? wrapSelection : editor.selection\r\n\r\n    // if the node is already wrapped with current node we unwrap it first.\r\n    if (editor.isNodeTypeActive(node.type)) {\r\n      editor.unwrapNode(node.type)\r\n    }\r\n    // if there is no text selected => insert the node.\r\n    //console.log('isLocation', Location.isLocation(editor.selection))\r\n    if (editor.isCollapsed()) {\r\n      //console.log('is collapsed insertNodes')\r\n      Transforms.insertNodes(editor, node)\r\n    } else {\r\n      //text is selected => add the node\r\n      Transforms.wrapNodes(editor, node, { split: true })\r\n      //console.log('editor', editor.children)\r\n      Transforms.collapse(editor, { edge: 'end' })\r\n    }\r\n    // Add {isLast} property to the last fragment of the comment.\r\n    const path = [...MaterialEditor.last(editor, editor.selection)[1]]\r\n    //The last Node is a text whose parent is a comment.\r\n    path.pop() // Removes last item of the path, to point the parent\r\n    Transforms.setNodes(editor, { isLast: true }, { at: path }) //add isLast\r\n  }\r\n\r\n  /**\r\n   * Unwraps or removes the nodes that are not in the list.\r\n   *\r\n   * It will search for all the nodes of `type` in the editor and will keep only\r\n   * the ones in the nodesToKeep.\r\n   *\r\n   * It assumes each item of nodesToKeep has an attribute `id`. This attribute will be the discriminator.\r\n   *\r\n   */\r\n  editor.syncExternalNodes = (type, nodesToKeep, unwrap = true) => {\r\n    //extracts the id from the nodes and removes those that are not in the list\r\n    const listOfIds = nodesToKeep.map(node => node.id)\r\n\r\n    if (unwrap) {\r\n      editor.unwrapNotInList(type, listOfIds)\r\n    } else {\r\n      editor.removeNotInList(type, listOfIds)\r\n    }\r\n    const nodesToKeepObj = {}\r\n    //Update values of nodes.data\r\n    //Create a map by id of the nodes to keep\r\n    nodesToKeep.forEach(node => (nodesToKeepObj[node.id] = node))\r\n    //Find nodes of this type remaining in the editor\r\n    const editorNodes = editor.findNodesByType(type)\r\n    //Update them\r\n    editorNodes.map(node => {\r\n      Transforms.setNodes(\r\n        editor,\r\n        { data: nodesToKeepObj[node.id] },\r\n        { match: n => n.id == node.id, at: [] }\r\n      )\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Removes the nodes that are not in the list of Ids\r\n   *\r\n   * Nodes of type `type` shall have the attribute/property `id`\r\n   *\r\n   * Example:\r\n   * ```\r\n   * {\r\n   *    type: `comment`\r\n   *    id: 30\r\n   *    data: { ... }\r\n   *  }\r\n   * ```\r\n   */\r\n  editor.removeNotInList = (type, listOfIds) => {\r\n    Transforms.removeNodes(editor, {\r\n      match: n => n.type === type && !listOfIds.includes(n.id),\r\n      at: [], //Search the whole editor content\r\n    })\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Unwraps the nodes of `type` whose ids are not in the provided list\r\n   *\r\n   * It assumes the nodes of `type` have an attribute `id`. The `id` may be a number or string.\r\n   *\r\n   * @param {string} type node type to be searched. Example: `comment`\r\n   * @param {Array} listOfIds Array with the list of ids. Example: [1, 2, 3].\r\n   */\r\n  editor.unwrapNotInList = (type, listOfIds) => {\r\n    Transforms.unwrapNodes(editor, {\r\n      match: n => n.type === type && !listOfIds.includes(n.id),\r\n      at: [], //Search the whole editor content\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Gets from current editor content the list of items of a particular type\r\n   */\r\n  editor.findNodesByType = type => {\r\n    const list = MaterialEditor.nodes(editor, {\r\n      match: n => n.type === type,\r\n      at: [],\r\n    })\r\n    // List in editor with path and node\r\n    const listWithNodesAndPath = Array.from(list)\r\n    // List with node (element)\r\n    const listWithNodes = listWithNodesAndPath.map(item => {\r\n      return item[0]\r\n    })\r\n    //console.log('fondNodesByType ', listWithNodes)\r\n    return listWithNodes\r\n  }\r\n\r\n  /**\r\n   * Returns the serialized value (plain text)\r\n   */\r\n  editor.serialize = nodes => {\r\n    return nodes.map(n => Node.string(n)).join('\\n')\r\n  }\r\n\r\n  /**\r\n   * Functions similar to syncExternalNodes,and also updates the node temporaryId with original id and data\r\n   *\r\n   * First, It will search for match in temporaryId's in nodesToKeep with id's of nodes and updates it with latest data\r\n   * Then, updates data in node id's matching with nodesToKeep id's\r\n   *\r\n   * Unwraps or removes the nodes that are not in the list.\r\n   */\r\n  editor.syncExternalNodesWithTemporaryId = (\r\n    type,\r\n    nodesToKeep,\r\n    unwrap = true\r\n  ) => {\r\n    //extracts the id from the nodes and removes those that are not in the list\r\n    const listOfIds = nodesToKeep.map(node => node.id)\r\n\r\n    const nodesToKeepObj = {}\r\n    //Update values of nodes.data\r\n    //Create a map by id of the nodes to keep\r\n    nodesToKeep.forEach(node => (nodesToKeepObj[node.id] = node))\r\n    //Find nodes of this type remaining in the editor\r\n    const editorNodes = editor.findNodesByType(type)\r\n    //Update them\r\n    editorNodes.map(node => {\r\n      // Find the key of node to update\r\n      const key = Object.keys(nodesToKeepObj).find(\r\n        key => nodesToKeepObj[key].temporaryId === node.id\r\n      )\r\n\r\n      // node to Update with original Id and data\r\n      const nodeToUpdate = nodesToKeepObj[key]\r\n      // If node.id exists\r\n      if (nodesToKeepObj[node.id] && !nodeToUpdate) {\r\n        Transforms.setNodes(\r\n          editor,\r\n          { data: nodesToKeepObj[node.id] },\r\n          { match: n => n.id == node.id, at: [0] }\r\n        )\r\n        // TemporaryId and data will be replaced with new id and data\r\n      } else if (key && nodeToUpdate) {\r\n        Transforms.setNodes(\r\n          editor,\r\n          { id: nodeToUpdate.id, data: nodeToUpdate },\r\n          { match: n => n.id == nodeToUpdate.temporaryId, at: [] }\r\n        )\r\n      } else if (unwrap) {\r\n        // unwraps the nodes in not list\r\n        editor.unwrapNotInList(type, listOfIds)\r\n      } else {\r\n        // removes the nodes in not list\r\n        editor.removeNotInList(type, listOfIds)\r\n      }\r\n    })\r\n  }\r\n  /**\r\n   * Is to get the selected plain text from the editor.selection\r\n   *\r\n   * @returns {string} selected text\r\n   */\r\n  editor.getSelectedText = () => {\r\n    return MaterialEditor.string(editor, editor.rememberedSelection)\r\n  }\r\n\r\n  return editor\r\n}\r\n\r\nexport default withBase\r\n","import MaterialEditor from '../slate/MaterialEditor'\r\n\r\n/**\r\n * Helper functions for managing inline marks\r\n * \r\n * @param {Editor} editor \r\n */\r\nconst withMarks = editor => { \r\n  \r\n  /**\r\n   * Checks if the mark is active\r\n   * \r\n   * @param {String} mark Mark to validate For example: 'bold', 'italic'\r\n   */\r\n  editor.isMarkActive = mark => {\r\n    const marks = MaterialEditor.marks(editor)\r\n    return marks ? marks[mark] === true : false\r\n  }\r\n\r\n  /**\r\n   * Toggles on/off the mark. If the mark exists it is removed and vice versa.\r\n   *   \r\n   * @param {String} mark Mark to validate For example: 'bold', 'italic'\r\n   */ \r\n   editor.toggleMark = mark => { \r\n    editor.isMarkActive(mark) ? MaterialEditor.removeMark(editor, mark) : MaterialEditor.addMark(editor, mark, true)\r\n  }\r\n  return editor\r\n}\r\n\r\nexport default withMarks","import MaterialEditor from '../slate/MaterialEditor'\r\nimport { Transforms } from 'slate'\r\n\r\n/**\r\n * Simple block handling\r\n * \r\n * @param {Editor} editor \r\n */\r\nconst withBlocks = editor => {\r\n  editor.LIST_TYPES = ['numbered-list', 'bulleted-list']\r\n\r\n  /**\r\n   * checks if a block is active\r\n   */\r\n  editor.isBlockActive = (block) => {\r\n    const [match] = MaterialEditor.nodes(editor, {\r\n      match: n => n.type === block,\r\n    })\r\n    return !!match\r\n  }\r\n\r\n  /**\r\n   * Toggles the block in the current selection\r\n   */\r\n  editor.toggleBlock = (block) => {\r\n    const isActive = editor.isBlockActive(block)\r\n    const isList = editor.LIST_TYPES.includes(block)\r\n\r\n    Transforms.unwrapNodes(editor, {\r\n      match: n => editor.LIST_TYPES.includes(n.type),\r\n      split: true,\r\n    })\r\n\r\n    //TODO cannot this be generalized??\r\n    Transforms.setNodes(editor, {\r\n      type: isActive ? 'paragraph' : isList ? 'list-item' : block,\r\n    })\r\n\r\n    if (!isActive && isList) {\r\n      const selected = { type: block, children: [] }\r\n      Transforms.wrapNodes(editor, selected)\r\n    }\r\n  }\r\n  return editor\r\n}\r\n\r\nexport default withBlocks","import { createEditor } from 'slate'\r\n\r\n// slate plugins\r\nimport { withReact } from 'slate-react'\r\nimport { withHistory } from 'slate-history'\r\n\r\n// Import material editor plugins\r\nimport withBase from '../plugins/withBase'\r\nimport withMarks from '../plugins/withMarks'\r\nimport withBlocks from '../plugins/withBlocks'\r\n\r\n/**\r\n * Creates a RichText editor.\r\n *\r\n * Includes the following plugins\r\n *  - withBlocks\r\n *  - withMarks\r\n *  - withBase\r\n *  - withHistory\r\n *  - withReact\r\n *\r\n * @param {string} editorId Optional unique identifier in case you have more than one editor. Defaults to default.\r\n * @public\r\n */\r\nexport default function createMaterialEditor(editorId = 'default') {\r\n  const editor = withBlocks(\r\n    withMarks(withBase(withHistory(withReact(createEditor()))))\r\n  )\r\n  editor.editorId = editorId\r\n  return editor\r\n}\r\n","const withComments = editor => {\r\n\r\n  const { isInline } = editor\r\n\r\n  const COMMENT_TYPE = 'comment'\r\n  \r\n  /**\r\n   * Set comment type not to be an inline element\r\n   */\r\n  editor.isInline = element => {\r\n    return element.type === COMMENT_TYPE ? true : isInline(element)\r\n  }\r\n\r\n  /**\r\n   * If the editor loses focus upon pressing the `AddCommentButton`, you need to call \r\n   * editor.rememberCurrentSelection() before the editor loses the focus  \r\n   * \r\n   * `data` cannot contain the following items: id, type or children.\r\n   */ \r\n  editor.addComment = (id, data) => {\r\n    const node = {\r\n      id: id,\r\n      type: COMMENT_TYPE,\r\n      children: [], \r\n      data //any data of the comment will be an attribute.\r\n    } \r\n    editor.wrapNode(node, editor.selection || editor.rememberedSelection)  \r\n  }\r\n  \r\n  /**\r\n   * Synchronizes comments.\r\n   * \r\n   * It receives a list of comments. \r\n   *  - Comments that are in the editor but not in the list are deleted\r\n   *  - Contents of the comments that are in the list are updated.\r\n   * \r\n   * Each comment is identified by `id` attribute in the node.\r\n   * \r\n   * @param {Array} commentsToKeep is a list of comment objects that have an attribute `id`.\r\n   */\r\n  editor.syncComments = (commentsToKeep) => {\r\n    editor.syncExternalNodes(COMMENT_TYPE, commentsToKeep)\r\n  }\r\n\r\n  return editor\r\n}\r\nexport default withComments\r\n","\r\nimport { Editor } from 'slate'\r\n/**\r\n * Plugin for handling endnote synced type\r\n * \r\n * Requires withBase plugin\r\n */\r\nconst withEndnotes = editor => {\r\n  const { isInline, isVoid } = editor\r\n\r\n  const ENDNOTE_TYPE = 'endnote'\r\n\r\n  /**\r\n   * Overwrite to indicate `endnote` nodes are inline\r\n   */\r\n  editor.isInline = element => {\r\n    return element.type === ENDNOTE_TYPE ? true : isInline(element)\r\n  }\r\n\r\n  /**\r\n   * Overwrite to indicate `endnote` nodes are void\r\n   */\r\n  editor.isVoid = element => {\r\n    return element.type === ENDNOTE_TYPE ? true : isVoid(element)\r\n  }\r\n\r\n  /**\r\n   * If the editor loses focus upon pressing the `AddEndnoteButton`, you need to call \r\n   * editor.rememberCurrentSelection() before the editor loses the focus  \r\n   * \r\n   * `data` cannot contain the following items: id, type or children.\r\n   */ \r\n  editor.addEndnote = (id,data) => {\r\n    const text = { text: '' }\r\n    const node = {\r\n      id: id,\r\n      type: ENDNOTE_TYPE,\r\n      children: [text], \r\n      data //any data of the comment will be an attribute.\r\n    } \r\n    editor.wrapNode(node, editor.selection || editor.rememberedSelection)  \r\n    return node\r\n  }\r\n  \r\n  /**\r\n   * Gets the endnote node previous to this one.\r\n   * If there is no endnote, returns null\r\n   */\r\n  editor.previousEndnoteNode = (endnoteId) => {\r\n    let previous = null\r\n    const endnotes = editor.findNodesByType(ENDNOTE_TYPE)\r\n    for(const endnote of endnotes) {\r\n      if (endnote.id === endnoteId) {\r\n        break\r\n      } \r\n      previous = endnote\r\n    \r\n    }\r\n    return previous\r\n  }\r\n\r\n   /**\r\n   *  Synchronizes endnotes.\r\n   * \r\n   * It receives a list of endnotes. \r\n   *  - Endnotes that are in the editor but not in the list are deleted\r\n   *  - Endnotes of the endnotes that are in the list are updated.\r\n   * \r\n   * Each endnote is identified by `id` attribute in the node.\r\n   * \r\n   * @param {Array} endnotesToKeep is a list of endnotes objects that have an attribute `id`.\r\n   */\r\n  editor.syncEndnotes= (endnotesToKeep) => {\r\n    editor.syncExternalNodes(ENDNOTE_TYPE, endnotesToKeep, false)\r\n  }\r\n\r\n  return editor\r\n}\r\n\r\nexport default withEndnotes\r\n\r\n\r\n","import { Node } from 'slate'\r\n/**\r\n *\r\n * Counter plugin for Material Slate.\r\n *\r\n * @param {Editor} editor\r\n */\r\nconst withCounter = editor => {\r\n  /**\r\n   * Returns the chars length\r\n   */\r\n  editor.getCharLength = nodes => {\r\n    return editor.serialize(nodes).length\r\n  }\r\n\r\n  /**\r\n   * Returns the words length\r\n   *\r\n   */\r\n  editor.getWordsLength = nodes => {\r\n    const content = editor.serialize(nodes)\r\n    //Reg exp from https://css-tricks.com/build-word-counter-app/\r\n    return content && content.replace(/\\s/g, '') !== ''\r\n      ? content.match(/\\S+/g).length\r\n      : 0\r\n  }\r\n\r\n  /**\r\n   * Returns the paragraphs length\r\n   */\r\n  editor.getParagraphLength = nodes => {\r\n    return nodes\r\n      .map(n => Node.string(n))\r\n      .join('\\n')\r\n      .split(/\\r\\n|\\r|\\n/).length\r\n  }\r\n\r\n  return editor\r\n}\r\n\r\nexport default withCounter\r\n","const withLinks = editor => {\r\n  const { isInline } = editor\r\n  const LINK_TYPE = 'link'\r\n\r\n  /**\r\n   * Set link type not to be an inline element\r\n   */\r\n  editor.isInline = element => {\r\n    return element.type === LINK_TYPE ? true : isInline(element)\r\n  }\r\n\r\n  /**\r\n   * If the editor loses focus upon pressing the `LinkButton`, you need to call\r\n   * editor.rememberCurrentSelection() before the editor loses the focus\r\n   */\r\n  editor.insertLink = url => {\r\n    if (editor.isNodeTypeActive(LINK_TYPE)) {\r\n      editor.unwrapNode(LINK_TYPE)\r\n    }\r\n    // editor selection on link button click\r\n    const wrapSelection = editor.selection || editor.rememberedSelection\r\n    editor.selection = wrapSelection ? wrapSelection : editor.selection\r\n    const node = {\r\n      type: LINK_TYPE,\r\n      url,\r\n      children: editor.isCollapsed() ? [{ text: url }] : [],\r\n    }\r\n    editor.wrapNode(node, wrapSelection)\r\n  }\r\n\r\n  return editor\r\n}\r\n\r\nexport default withLinks\r\n","import React from 'react'\r\nimport { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Slate } from 'slate-react'\r\nimport { Box, styled } from '@mui/material'\r\n\r\nconst StyledMaterialSlate = styled(Box)(({ theme }) => ({\r\n  borderRadius: theme.shape.borderRadius,\r\n  border: '1px solid',\r\n  borderColor: theme.palette.grey[400],\r\n  '&:hover': {\r\n    borderColor: theme.palette.text.primary,\r\n  },\r\n  '&.materialSlate-focused': {\r\n    borderColor: theme.palette.primary.main,\r\n    '&:hover': {\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))\r\n\r\n/**\r\n * Rich Slate\r\n *\r\n * It is the provider of the useSlate hook.\r\n *\r\n *\r\n */\r\nexport default function MaterialSlate({\r\n  value,\r\n  editor,\r\n  onChange,\r\n  children,\r\n  className,\r\n  focusClassName,\r\n}) {\r\n  const [isFocused, setIsFocused] = useState(false)\r\n  return (\r\n    <StyledMaterialSlate\r\n      onBlur={() => setIsFocused(false)}\r\n      onFocus={() => setIsFocused(true)}\r\n      className={`${classes.root} ${\r\n        isFocused && (focusClassName ? focusClassName : 'materialSlate-focused')\r\n      } ${className}`}\r\n    >\r\n      <Slate value={value} editor={editor} onChange={value => onChange(value)}>\r\n        {children}\r\n      </Slate>\r\n    </StyledMaterialSlate>\r\n  )\r\n}\r\n\r\nMaterialSlate.propTypes = {\r\n  /** editor created using createRichEditor() */\r\n  editor: PropTypes.object.isRequired,\r\n  /** content to display in the editor*/\r\n  value: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  /** Called every time there is a change on the value */\r\n  onChange: PropTypes.func,\r\n  /** class to override and style the slate  */\r\n  className: PropTypes.string,\r\n  /** className to apply when the editor has focus */\r\n  focusClassName: PropTypes.string,\r\n}\r\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n/**\n * Constants.\n */\n\nvar IS_MAC = typeof window != 'undefined' && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);\n\nvar MODIFIERS = {\n  alt: 'altKey',\n  control: 'ctrlKey',\n  meta: 'metaKey',\n  shift: 'shiftKey'\n};\n\nvar ALIASES = {\n  add: '+',\n  break: 'pause',\n  cmd: 'meta',\n  command: 'meta',\n  ctl: 'control',\n  ctrl: 'control',\n  del: 'delete',\n  down: 'arrowdown',\n  esc: 'escape',\n  ins: 'insert',\n  left: 'arrowleft',\n  mod: IS_MAC ? 'meta' : 'control',\n  opt: 'alt',\n  option: 'alt',\n  return: 'enter',\n  right: 'arrowright',\n  space: ' ',\n  spacebar: ' ',\n  up: 'arrowup',\n  win: 'meta',\n  windows: 'meta'\n};\n\nvar CODES = {\n  backspace: 8,\n  tab: 9,\n  enter: 13,\n  shift: 16,\n  control: 17,\n  alt: 18,\n  pause: 19,\n  capslock: 20,\n  escape: 27,\n  ' ': 32,\n  pageup: 33,\n  pagedown: 34,\n  end: 35,\n  home: 36,\n  arrowleft: 37,\n  arrowup: 38,\n  arrowright: 39,\n  arrowdown: 40,\n  insert: 45,\n  delete: 46,\n  meta: 91,\n  numlock: 144,\n  scrolllock: 145,\n  ';': 186,\n  '=': 187,\n  ',': 188,\n  '-': 189,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '[': 219,\n  '\\\\': 220,\n  ']': 221,\n  '\\'': 222\n};\n\nfor (var f = 1; f < 20; f++) {\n  CODES['f' + f] = 111 + f;\n}\n\n/**\n * Is hotkey?\n */\n\nfunction isHotkey(hotkey, options, event) {\n  if (options && !('byKey' in options)) {\n    event = options;\n    options = null;\n  }\n\n  if (!Array.isArray(hotkey)) {\n    hotkey = [hotkey];\n  }\n\n  var array = hotkey.map(function (string) {\n    return parseHotkey(string, options);\n  });\n  var check = function check(e) {\n    return array.some(function (object) {\n      return compareHotkey(object, e);\n    });\n  };\n  var ret = event == null ? check : check(event);\n  return ret;\n}\n\nfunction isCodeHotkey(hotkey, event) {\n  return isHotkey(hotkey, event);\n}\n\nfunction isKeyHotkey(hotkey, event) {\n  return isHotkey(hotkey, { byKey: true }, event);\n}\n\n/**\n * Parse.\n */\n\nfunction parseHotkey(hotkey, options) {\n  var byKey = options && options.byKey;\n  var ret = {};\n\n  // Special case to handle the `+` key since we use it as a separator.\n  hotkey = hotkey.replace('++', '+add');\n  var values = hotkey.split('+');\n  var length = values.length;\n\n  // Ensure that all the modifiers are set to false unless the hotkey has them.\n\n  for (var k in MODIFIERS) {\n    ret[MODIFIERS[k]] = false;\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = values[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var value = _step.value;\n\n      var optional = value.endsWith('?') && value.length > 1;\n\n      if (optional) {\n        value = value.slice(0, -1);\n      }\n\n      var name = toKeyName(value);\n      var modifier = MODIFIERS[name];\n\n      if (value.length > 1 && !modifier && !ALIASES[value] && !CODES[name]) {\n        throw new TypeError('Unknown modifier: \"' + value + '\"');\n      }\n\n      if (length === 1 || !modifier) {\n        if (byKey) {\n          ret.key = name;\n        } else {\n          ret.which = toKeyCode(value);\n        }\n      }\n\n      if (modifier) {\n        ret[modifier] = optional ? null : true;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return ret;\n}\n\n/**\n * Compare.\n */\n\nfunction compareHotkey(object, event) {\n  for (var key in object) {\n    var expected = object[key];\n    var actual = void 0;\n\n    if (expected == null) {\n      continue;\n    }\n\n    if (key === 'key' && event.key != null) {\n      actual = event.key.toLowerCase();\n    } else if (key === 'which') {\n      actual = expected === 91 && event.which === 93 ? 91 : event.which;\n    } else {\n      actual = event[key];\n    }\n\n    if (actual == null && expected === false) {\n      continue;\n    }\n\n    if (actual !== expected) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Utils.\n */\n\nfunction toKeyCode(name) {\n  name = toKeyName(name);\n  var code = CODES[name] || name.toUpperCase().charCodeAt(0);\n  return code;\n}\n\nfunction toKeyName(name) {\n  name = name.toLowerCase();\n  name = ALIASES[name] || name;\n  return name;\n}\n\n/**\n * Export.\n */\n\nexports.default = isHotkey;\nexports.isHotkey = isHotkey;\nexports.isCodeHotkey = isCodeHotkey;\nexports.isKeyHotkey = isKeyHotkey;\nexports.parseHotkey = parseHotkey;\nexports.compareHotkey = compareHotkey;\nexports.toKeyCode = toKeyCode;\nexports.toKeyName = toKeyName;","import React from 'react'\r\n\r\nexport default function defaultRenderElement({\r\n  element,\r\n  children,\r\n  attributes,\r\n  ...rest\r\n}) {\r\n  switch (element.type) {\r\n    case 'block-quote':\r\n      return <blockquote {...attributes}>{children}</blockquote>\r\n    case 'bulleted-list':\r\n      return <ul {...attributes}>{children}</ul>\r\n    case 'heading-one':\r\n      return <h1 {...attributes}>{children}</h1>\r\n    case 'heading-two':\r\n      return <h2 {...attributes}>{children}</h2>\r\n    case 'list-item':\r\n      return <li {...attributes}>{children}</li>\r\n    case 'numbered-list':\r\n      return <ol {...attributes}>{children}</ol>\r\n    case 'link':\r\n      return (\r\n        <a {...attributes} href={element.url}>\r\n          {children}\r\n        </a>\r\n      )\r\n    default:\r\n      return <p {...attributes}>{children}</p>\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\n/**\r\n * Default renderer of leafs. \r\n * \r\n * Handles the following type of leafs `bold` (strong), `code` (code), `italic` (em), `strikethrough` (del), `underlined`(u).\r\n * \r\n * @param {Object} props \r\n */\r\n\r\nexport default function defaultRenderLeaf({ leaf, attributes, children, text }) {\r\n  if (leaf.bold) {\r\n    children = <strong>{children}</strong>\r\n  }\r\n  if (leaf.code) {\r\n    children = <code>{children}</code>\r\n  }\r\n  if (leaf.italic) {\r\n    children = <em>{children}</em>\r\n  }\r\n  if (leaf.strikethrough) {\r\n    children = <del>{children}</del>\r\n  }\r\n  if (leaf.underlined) {\r\n    children = <u>{children}</u>\r\n  }\r\n  return <span {...attributes}>{children}</span> \r\n}","const defaultHotkeys = {\r\n  'mod+b': {\r\n    type: 'mark',\r\n    value: 'bold',\r\n  },\r\n  'mod+i': {\r\n    type: 'mark',\r\n    value: 'italic',\r\n  },\r\n  'mod+u': {\r\n    type: 'mark',\r\n    value: 'underlined',\r\n  },\r\n  'mod+`': {\r\n    type: 'mark',\r\n    value: 'code',\r\n  },\r\n  'shift+enter': {\r\n    type: 'newline',\r\n    value: '',\r\n  },\r\n}\r\nexport default defaultHotkeys\r\n","import React, { useCallback } from 'react'\r\nimport { Transforms } from 'slate'\r\nimport { Editable, useSlate } from 'slate-react'\r\nimport PropTypes from 'prop-types'\r\nimport isHotkey from 'is-hotkey'\r\nimport { styled } from '@mui/material'\r\n\r\nimport defaultRenderElement from './defaultRenderElement'\r\nimport defaultRenderLeaf from './defaultRenderLeaf'\r\nimport defaultHotkeys from './defaultHotkeys'\r\n\r\nconst StyledEditor = styled(Editable)(({ theme }) => ({\r\n  paddingLeft: theme.spacing(1),\r\n  paddingRight: theme.spacing(1),\r\n  paddingBottom: theme.spacing(1),\r\n  fontFamily: theme.typography.fontFamily,\r\n}))\r\n\r\n/**\r\n * Wrapper of Slate Editable\r\n *\r\n */\r\nexport default function MaterialEditable({\r\n  renderElement,\r\n  renderLeaf,\r\n  placeholder,\r\n  hotkeys,\r\n  onHotkey,\r\n  children,\r\n  className,\r\n  ...props\r\n}) {\r\n  const editor = useSlate()\r\n\r\n  // Define a rendering function based on the element passed to `props`.\r\n  // Props is deconstructed in the {element, attributes, children, rest (any other prop)\r\n  // We use `useCallback` here to memoize the function for subsequent renders.\r\n  const handleRenderElement = useCallback(props => {\r\n    return renderElement ? renderElement(props) : defaultRenderElement(props)\r\n  }, [])\r\n\r\n  const handleRenderLeaf = useCallback(props => {\r\n    return renderLeaf ? renderLeaf(props) : defaultRenderLeaf(props)\r\n  }, [])\r\n\r\n  const handleOnKeyDown = event => {\r\n    for (const pressedKeys in hotkeys) {\r\n      if (isHotkey(pressedKeys, event)) {\r\n        const hotkey = hotkeys[pressedKeys]\r\n        //console.log(hotkey)\r\n        event.preventDefault()\r\n        if (hotkey.type === 'mark') {\r\n          editor.toggleMark(hotkey.value)\r\n        }\r\n        if (hotkey.type === 'block') {\r\n          editor.toggleBlock(hotkey.value)\r\n        }\r\n        if (hotkey.type === 'newline') {\r\n          editor.insertText('\\n')\r\n          //The following line updates the cursor\r\n          Transforms.move(editor, { distance: 0, unit: 'offset' })\r\n        }\r\n        return (\r\n          onHotkey && onHotkey({ event, editor, hotkey, pressedKeys, hotkeys })\r\n        )\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <StyledEditor\r\n      renderElement={handleRenderElement}\r\n      renderLeaf={handleRenderLeaf}\r\n      onKeyDown={event => handleOnKeyDown(event)}\r\n      placeholder={placeholder}\r\n      className={className}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledEditor>\r\n  )\r\n}\r\n\r\n// Specifies the default values for props:\r\nMaterialEditable.defaultProps = {\r\n  placeholder: 'Type some text...',\r\n  hotkeys: defaultHotkeys,\r\n}\r\n\r\n// TODO add info about arguments in functions\r\n\r\nMaterialEditable.propTypes = {\r\n  /** To style and override the existing class  */\r\n  className: PropTypes.string,\r\n  /** Called when an element needs to be rendered */\r\n  renderElement: PropTypes.func,\r\n  /** Called when a leaf needs to be rendered */\r\n  renderLeaf: PropTypes.func,\r\n  /** Text/component to display when there are no contents on the editor. Default\" \"Type some text...\" */\r\n  placeholder: PropTypes.any,\r\n  /**\r\n   * Additional hotkeys to be added other than default. Object of the form `{'mod+k': {type: 'mark', value: 'italic'}\r\n   * defaultHotkeys can be disallowed by passing hotkeys as null\r\n   */\r\n  hotkeys: PropTypes.object,\r\n  /**\r\n   * Event tht will be triggered in case a hotkey is detected\r\n   * It has one single argument that can be deconstructed in `{event, editor, hotkey, pressedKeys, hotkeys}`\r\n   */\r\n  onHotKey: PropTypes.func,\r\n}\r\n","function _interopRequireDefault(e) {\n  return e && e.__esModule ? e : {\n    \"default\": e\n  };\n}\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","\"use strict\";\n'use client';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function () {\n    return _utils.createSvgIcon;\n  }\n});\nvar _utils = require(\"@mui/material/utils\");","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M18 4H6c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2m0 14H6V6h12z\"\n}), 'CropSquareOutlined');","import React from 'react'\r\nimport { useSlate } from 'slate-react'\r\nimport PropTypes from 'prop-types'\r\nimport { IconButton, Tooltip } from '@mui/material'\r\nimport CropSquareOutlined from '@mui/icons-material/CropSquareOutlined'\r\n\r\n/**\r\n * ToolbarButton is the base button for any button on the toolbars.\r\n * It requires the `type` of action to perform and the format that will be added.\r\n *\r\n * It displays a tooltip text on hover. If tooltip text is not passed as a prop it will use the capitalized text of the format\r\n */\r\nconst ToolbarButton = React.forwardRef(\r\n  (\r\n    {\r\n      tooltip,\r\n      placement,\r\n      icon,\r\n      type,\r\n      disabled,\r\n      disableOnSelection,\r\n      disableOnCollapse,\r\n      format,\r\n      onMouseDown,\r\n      isActive,\r\n      ...rest\r\n    },\r\n    ref\r\n  ) => {\r\n    const editor = useSlate()\r\n\r\n    /**\r\n     * If no tooltip prop is passed it generates a default based on the format string.\r\n     * Converts - into spaces and uppercases the first letter of the first word.\r\n     */\r\n    const defaultTooltip = () => {\r\n      return (format.charAt(0).toUpperCase() + format.substring(1)).replace(\r\n        '-',\r\n        ' '\r\n      )\r\n    }\r\n\r\n    /**\r\n     * Toggles mark| block and forwards the onMouseDown event\r\n     */\r\n    const handleOnMouseDown = event => {\r\n      event.preventDefault()\r\n      switch (type) {\r\n        case 'mark':\r\n          editor.toggleMark(format)\r\n          break\r\n        case 'block':\r\n          editor.toggleBlock(format)\r\n      }\r\n      onMouseDown && onMouseDown({ editor, format, type, event })\r\n    }\r\n\r\n    const checkIsActive = () => {\r\n      if (isActive) {\r\n        return isActive()\r\n      }\r\n\r\n      switch (type) {\r\n        case 'mark':\r\n          return editor.isMarkActive(format)\r\n        case 'block':\r\n          return editor.isBlockActive(format)\r\n        case 'link':\r\n          return editor.isNodeTypeActive(format)\r\n      }\r\n      return\r\n    }\r\n\r\n    /**\r\n     * Conditionally disables the button\r\n     */\r\n    const isDisabled = () => {\r\n      let disabled = false\r\n      disabled = disableOnSelection ? editor.isSelectionExpanded() : false\r\n      disabled = disableOnCollapse ? editor.isSelectionCollapsed() : disabled\r\n      return disabled\r\n    }\r\n\r\n    return disabled || isDisabled() ? (\r\n      <IconButton\r\n        aria-label={tooltip ? tooltip : defaultTooltip()}\r\n        ref={ref}\r\n        color={checkIsActive() ? 'secondary' : 'default'}\r\n        onMouseDown={event => handleOnMouseDown(event)}\r\n        disabled={disabled || isDisabled()}\r\n        {...rest}\r\n      >\r\n        {icon}\r\n      </IconButton>\r\n    ) : (\r\n      <Tooltip\r\n        title={tooltip ? tooltip : defaultTooltip()}\r\n        placement={placement}\r\n      >\r\n        <IconButton\r\n          aria-label={tooltip ? tooltip : defaultTooltip()}\r\n          ref={ref}\r\n          color={checkIsActive() ? 'secondary' : 'default'}\r\n          onMouseDown={event => handleOnMouseDown(event)}\r\n          disabled={disabled || isDisabled()}\r\n          {...rest}\r\n        >\r\n          {icon}\r\n        </IconButton>\r\n      </Tooltip>\r\n    )\r\n  }\r\n)\r\n\r\nexport default ToolbarButton\r\n\r\nToolbarButton.defaultProps = {\r\n  placement: 'top',\r\n  icon: <CropSquareOutlined />,\r\n  disableOnCollapse: false,\r\n  disableOnSelection: false,\r\n}\r\n\r\n// PropTypes\r\nToolbarButton.propTypes = {\r\n  /**\r\n   * Text displayed on the button tooltip. By Default it is the capitalized `format` string.\r\n   * For instance, `bold` is displayed as `Bold`.\r\n   */\r\n  tooltip: PropTypes.string,\r\n\r\n  /**\r\n   * Location where the tooltip will appear.\r\n   * It can be `top`, `bottom`, `left`, `right`. Defaults to top.\r\n   */\r\n  placement: PropTypes.string,\r\n\r\n  /**\r\n   * Toolbar button has the option of adding to the editor value marks and blocks.\r\n   *\r\n   * `mark` can be added to the editor value when you want to add something like `bold`, `italic`...\r\n   *  Marks are rendered into HTML in `renderLeaf` of `MaterialEditable`\r\n   *\r\n   * `block` to be added to the editor `value` when the button is pressed. For example: `header1`, `numbered-list`...\r\n   *  `renderElement` of the `RichEditable` component will need to handle the actual conversion from mark to HTML/Component on render time.\r\n   *\r\n   * If you don't want to add a mark or a block do not set the prop or use whatever string.\r\n   * You can perform the action the button triggers using onMouseDown().\r\n   */\r\n  type: PropTypes.string,\r\n\r\n  /**\r\n   *\r\n   * The string that identifies the format of the block or mark to be added. For example: `bold`, `header1`...\r\n   */\r\n  format: PropTypes.string.isRequired,\r\n\r\n  /**\r\n   *\r\n   * When a button is active it means the button is highlighted. For example, if in current position of the cursor,\r\n   * the text is bold, the bold button should be active.\r\n   *\r\n   * isActive is a function that returns true/false to indicate the status of the mark/block.\r\n   * Set this function if you need to handle anything other than standard mark or blocks.\r\n   */\r\n  isActive: PropTypes.func,\r\n\r\n  /**\r\n   * Unconditionally disables the button\r\n   *\r\n   * Disable a button means that the button cannot be clicked (note it is not the opposite of isActive)\r\n   */\r\n  disabled: PropTypes.bool,\r\n  /**\r\n   * If true, disables the button if there is a text selected on the editor.\r\n   *\r\n   * Disable a button means that the button cannot be clicked.\r\n   *\r\n   * Use either disableOnSelection or disableOnCollapse, but not both.\r\n   */\r\n  disableOnSelection: PropTypes.bool,\r\n\r\n  /**\r\n   * If true, disables the button when  there is no text selected or the editor has no focus.\r\n   *\r\n   * Disable a button means that button cannot be clicked.\r\n   *\r\n   * Use either disableOnSelection or disableOnCollapse, but not both.\r\n   */\r\n  disableOnCollapse: PropTypes.bool,\r\n\r\n  /**\r\n   * Instance a component. The icon that will be displayed. Typically an icon from @mui/icons-material\r\n   */\r\n  icon: PropTypes.object,\r\n\r\n  /**\r\n   * On mouse down event is passed up to the parent with props that can be deconstructed in {editor, event, mark/block}\r\n   */\r\n  onMouseDown: PropTypes.func,\r\n}\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.6 10.79c.97-.67 1.65-1.77 1.65-2.79 0-2.26-1.75-4-4-4H7v14h7.04c2.09 0 3.71-1.7 3.71-3.79 0-1.52-.86-2.82-2.15-3.42M10 6.5h3c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-3zm3.5 9H10v-3h3.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5\"\n}), 'FormatBold');","import React from 'react'\r\nimport ToolbarButton from './ToolbarButton'\r\nimport FormatBold from '@mui/icons-material/FormatBold'\r\n\r\n/**\r\n * Toolbar button for bold text mark\r\n *\r\n * @see ToolbarButton\r\n */\r\n\r\nconst BoldButton = React.forwardRef((props, ref) => (\r\n  <ToolbarButton\r\n    icon={<FormatBold />}\r\n    type=\"mark\"\r\n    format=\"bold\"\r\n    ref={ref}\r\n    {...props}\r\n  />\r\n))\r\nexport default BoldButton\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M10 4v3h2.21l-3.42 8H6v3h8v-3h-2.21l3.42-8H18V4z\"\n}), 'FormatItalicOutlined');","import React from 'react'\r\nimport ToolbarButton from './ToolbarButton'\r\nimport FormatItalicOutlined from '@mui/icons-material/FormatItalicOutlined'\r\n\r\n/**\r\n * Toolbar button for italic text mark\r\n *\r\n * @see ToolbarButton\r\n */\r\n\r\nconst ItalicButton = React.forwardRef((props, ref) => (\r\n  <ToolbarButton\r\n    icon={<FormatItalicOutlined />}\r\n    type=\"mark\"\r\n    format=\"italic\"\r\n    ref={ref}\r\n    {...props}\r\n  />\r\n))\r\nexport default ItalicButton\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 17c3.31 0 6-2.69 6-6V3h-2.5v8c0 1.93-1.57 3.5-3.5 3.5S8.5 12.93 8.5 11V3H6v8c0 3.31 2.69 6 6 6m-7 2v2h14v-2z\"\n}), 'FormatUnderlined');","import React from 'react'\r\nimport ToolbarButton from './ToolbarButton'\r\nimport FormatUnderlined from '@mui/icons-material/FormatUnderlined'\r\n\r\n/**\r\n * Toolbar button for underlined text mark\r\n *\r\n * @see ToolbarButton\r\n */\r\nconst UnderlinedButton = React.forwardRef((props, ref) => (\r\n  <ToolbarButton\r\n    icon={<FormatUnderlined />}\r\n    type=\"mark\"\r\n    format=\"underlined\"\r\n    ref={ref}\r\n    {...props}\r\n  />\r\n))\r\nexport default UnderlinedButton\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6.85 7.08C6.85 4.37 9.45 3 12.24 3c1.64 0 3 .49 3.9 1.28.77.65 1.46 1.73 1.46 3.24h-3.01c0-.31-.05-.59-.15-.85-.29-.86-1.2-1.28-2.25-1.28-1.86 0-2.34 1.02-2.34 1.7 0 .48.25.88.74 1.21.38.25.77.48 1.41.7H7.39c-.21-.34-.54-.89-.54-1.92M21 12v-2H3v2h9.62c1.15.45 1.96.75 1.96 1.97 0 1-.81 1.67-2.28 1.67-1.54 0-2.93-.54-2.93-2.51H6.4c0 .55.08 1.13.24 1.58.81 2.29 3.29 3.3 5.67 3.3 2.27 0 5.3-.89 5.3-4.05 0-.3-.01-1.16-.48-1.94H21z\"\n}), 'StrikethroughS');","import React from 'react'\r\nimport ToolbarButton from './ToolbarButton'\r\nimport StrikethroughSIcon from '@mui/icons-material/StrikethroughS'\r\n\r\n/**\r\n * Toolbar button for strike through text mark\r\n *\r\n * @see ToolbarButton\r\n */\r\n\r\nconst StrikethroughButton = React.forwardRef((props, ref) => (\r\n  <ToolbarButton\r\n    icon={<StrikethroughSIcon />}\r\n    type=\"mark\"\r\n    format=\"strikethrough\"\r\n    ref={ref}\r\n    {...props}\r\n  />\r\n))\r\nexport default StrikethroughButton\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9.4 16.6 4.8 12l4.6-4.6L8 6l-6 6 6 6zm5.2 0 4.6-4.6-4.6-4.6L16 6l6 6-6 6z\"\n}), 'Code');","import React from 'react'\r\nimport ToolbarButton from './ToolbarButton'\r\nimport CodeIcon from '@mui/icons-material/Code'\r\n\r\n/**\r\n * Toolbar button for adding code mono-spaced text mark\r\n *\r\n * @see ToolbarButton\r\n */\r\n\r\nconst CodeButton = React.forwardRef((props, ref) => (\r\n  <ToolbarButton\r\n    icon={<CodeIcon />}\r\n    type=\"mark\"\r\n    format=\"code\"\r\n    ref={ref}\r\n    {...props}\r\n  />\r\n))\r\nexport default CodeButton\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M4 10.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5m0-6c-.83 0-1.5.67-1.5 1.5S3.17 7.5 4 7.5 5.5 6.83 5.5 6 4.83 4.5 4 4.5m0 12c-.83 0-1.5.68-1.5 1.5s.68 1.5 1.5 1.5 1.5-.68 1.5-1.5-.67-1.5-1.5-1.5M7 19h14v-2H7zm0-6h14v-2H7zm0-8v2h14V5z\"\n}), 'FormatListBulleted');","import React from 'react'\r\nimport ToolbarButton from './ToolbarButton'\r\nimport FormatListBulleted from '@mui/icons-material/FormatListBulleted'\r\n\r\n/**\r\n * Toolbar button for underlined text mark\r\n *\r\n * @see ToolbarButton\r\n *\r\n */\r\nconst BulletedListButton = React.forwardRef((props, ref) => (\r\n  <ToolbarButton\r\n    icon={<FormatListBulleted />}\r\n    type=\"block\"\r\n    format=\"bulleted-list\"\r\n    ref={ref}\r\n    {...props}\r\n  />\r\n))\r\nexport default BulletedListButton\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2zm1-9h1V4H2v1h1zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2zm5-6v2h14V5zm0 14h14v-2H7zm0-6h14v-2H7z\"\n}), 'FormatListNumbered');","import React from 'react'\r\nimport ToolbarButton from './ToolbarButton'\r\nimport FormatListNumbered from '@mui/icons-material/FormatListNumbered'\r\n\r\n/**\r\n * Toolbar button for numbered list block\r\n *\r\n * @see ToolbarButton\r\n */\r\n\r\nconst NumberedListButton = React.forwardRef((props, ref) => (\r\n  <ToolbarButton\r\n    icon={<FormatListNumbered />}\r\n    type=\"block\"\r\n    format=\"numbered-list\"\r\n    ref={ref}\r\n    {...props}\r\n  />\r\n))\r\nexport default NumberedListButton\r\n","import React from 'react'\r\nimport BoldButton from '../Buttons/BoldButton'\r\nimport ItalicButton from '../Buttons/ItalicButton'\r\nimport UnderlinedButton from '../Buttons/UnderlinedButton'\r\nimport StrikethroughButton from '../Buttons/StrikethroughButton'\r\nimport CodeButton from '../Buttons/CodeButton'\r\nimport BulletedListButton from '../Buttons/BulletedListButton'\r\nimport NumberedListButton from '../Buttons/NumberedListButton'\r\nimport { Box, styled } from '@mui/material'\r\n\r\nconst StyledToolBar = styled(Box)(({ theme }) => ({\r\n  backgroundColor: theme.palette.grey[200],\r\n  padding: theme.spacing(1 / 4),\r\n}))\r\n\r\n/**\r\n * Toolbar that appears on the top of the editor.\r\n *\r\n * It accepts any content as children. If no children are set it displays by default the following buttons:\r\n * Bold, italic, underline, strike through, code, bulleted list and numbered list\r\n */\r\nexport default function Toolbar({ children, className, ...props }) {\r\n  return (\r\n    <StyledToolBar borderRadius=\"borderRadius\" {...props}>\r\n      {!children && (\r\n        <React.Fragment>\r\n          <BoldButton />\r\n          <ItalicButton />\r\n          <UnderlinedButton />\r\n          <StrikethroughButton />\r\n          <CodeButton />\r\n          <BulletedListButton />\r\n          <NumberedListButton />\r\n        </React.Fragment>\r\n      )}\r\n      {children && <React.Fragment>{children}</React.Fragment>}\r\n    </StyledToolBar>\r\n  )\r\n}\r\n","import React, { useRef, useEffect } from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport { Editor, Range } from 'slate'\r\nimport { ReactEditor, useSlate } from 'slate-react'\r\n\r\nimport BoldButton from '../Buttons/BoldButton'\r\nimport ItalicButton from '../Buttons/ItalicButton'\r\nimport UnderlinedButton from '../Buttons/UnderlinedButton'\r\nimport StrikethroughButton from '../Buttons/StrikethroughButton'\r\nimport CodeButton from '../Buttons/CodeButton'\r\n\r\nconst Portal = ({ children }) => {\r\n  return ReactDOM.createPortal(children, document.body)\r\n}\r\n\r\nconst StyledBox = styled(Box)(({ theme }) => ({\r\n  ...props =>\r\n    !props.className && {\r\n      position: 'absolute',\r\n      padding: theme.spacing(1 / 4),\r\n      zIndex: 1,\r\n      top: '-10000px',\r\n      left: '-10000px',\r\n      opacity: 0,\r\n      backgroundColor: theme.palette.grey[200],\r\n      transition: 'opacity 0.75s',\r\n    },\r\n}))\r\n\r\n/**\r\n * A hovering toolbar that is, a toolbar that appears over a selected text, and only when there is\r\n * a selection.\r\n *\r\n * If no children are provided it displays the following buttons:\r\n * Bold, italic, underlined, strike through and code.\r\n *\r\n * Children will typically be `ToolbarButton`.\r\n */\r\nexport default function HoveringToolbar({ children, className, ...props }) {\r\n  const ref = useRef()\r\n  const editor = useSlate()\r\n\r\n  useEffect(() => {\r\n    const el = ref.current\r\n    const { selection } = editor\r\n\r\n    if (!el) {\r\n      return\r\n    }\r\n\r\n    if (\r\n      !selection ||\r\n      !ReactEditor.isFocused(editor) ||\r\n      Range.isCollapsed(selection) ||\r\n      Editor.string(editor, selection) === ''\r\n    ) {\r\n      el.removeAttribute('style')\r\n      return\r\n    }\r\n\r\n    const domSelection = window.getSelection()\r\n    const domRange = domSelection.getRangeAt(0)\r\n    const rect = domRange.getBoundingClientRect()\r\n    el.style.opacity = 1\r\n    el.style.top = `${rect.top + window.pageYOffset - el.offsetHeight - 4}px`\r\n    el.style.left = `${\r\n      rect.left + window.pageXOffset - el.offsetWidth / 2 + rect.width / 2\r\n    }px`\r\n  })\r\n\r\n  return (\r\n    <Portal>\r\n      <StyledBox\r\n        borderRadius=\"borderRadius\"\r\n        ref={ref}\r\n        className={className || ''}\r\n        {...props}\r\n      >\r\n        {!children && (\r\n          <React.Fragment>\r\n            <BoldButton />\r\n            <ItalicButton />\r\n            <UnderlinedButton />\r\n            <StrikethroughButton />\r\n            <CodeButton />\r\n          </React.Fragment>\r\n        )}\r\n        {children && children}\r\n      </StyledBox>\r\n    </Portal>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Box } from '@mui/material'\r\n\r\n/**\r\n * Toolbar button separator.\r\n *\r\n * Displays an horizontal line. Use it for separating groups of buttons.\r\n *\r\n */\r\n\r\nexport default function ButtonSeparator({ borderColor, ...other }) {\r\n  return (\r\n    <Box display=\"inline\" {...other}>\r\n      <Box\r\n        borderLeft={1}\r\n        borderColor={borderColor ? borderColor : 'grey.400'}\r\n        marginLeft=\"2px\"\r\n        marginRight=\"2px\"\r\n        display=\"inline\"\r\n      ></Box>\r\n    </Box>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n} from '@mui/material'\r\n\r\n/**\r\n * Simple dialog box with a text field and two buttons Cancel and Save.\r\n * Three props need to be set:\r\n *\r\n *  1. `onCancel` called when the cancel button is pressed ,\r\n *  2. `onSave` called when the save button is pressed\r\n *  3. open, boolean that indicates if the dialog is displayed (true) or not (false)\r\n *\r\n */\r\nexport default function SimpleDialog({\r\n  open,\r\n  title,\r\n  label,\r\n  format,\r\n  defaultValue,\r\n  onCancel,\r\n  onSave,\r\n  ...props\r\n}) {\r\n  const [value, setValue] = useState(defaultValue)\r\n\r\n  //Calls `onCancel` prop and sets the default value\r\n  const handleOnCancel = format => {\r\n    onCancel()\r\n    setValue(defaultValue)\r\n  }\r\n  // Calls `onSave` prop and sets the default value\r\n  const handleOnSave = event => {\r\n    onSave({ format, value })\r\n    setValue(defaultValue)\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleOnCancel}\r\n      aria-labelledby=\"dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n      fullWidth={true}\r\n      maxWidth={props.maxWidth ? props.maxWidth : 'xs'}\r\n    >\r\n      <DialogTitle id=\"dialog-title\">{title}</DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          fullWidth\r\n          multiline\r\n          autoFocus\r\n          defaultValue={defaultValue}\r\n          label={label}\r\n          variant=\"outlined\"\r\n          onChange={event => setValue(event.target.value)}\r\n          required\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          onClick={() => handleOnCancel()}\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={event => handleOnSave(event)}\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n        >\r\n          Save\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nSimpleDialog.propTypes = {\r\n  /**\r\n   * If it is true, it displays the dialog window.\r\n   */\r\n  open: PropTypes.bool.isRequired,\r\n  /**\r\n   * Called whe the Cancel button is pressed\r\n   */\r\n  onCancel: PropTypes.func.isRequired,\r\n  /**\r\n   * Called when the save button is pressed\r\n   */\r\n  onSave: PropTypes.func.isRequired,\r\n\r\n  /**\r\n   * Title of the dialog window\r\n   */\r\n  title: PropTypes.string,\r\n\r\n  /**\r\n   * Label of the textfield\r\n   */\r\n  label: PropTypes.string,\r\n\r\n  /**\r\n   * Format of the element to be added/edited.\r\n   * For example: bold, italic, comment, link, endnote\r\n   *\r\n   * Just required if you use the same dialog for different type of nodes.\r\n   */\r\n  format: PropTypes.string,\r\n\r\n  /**\r\n   * Default value displayed on the textfield.\r\n   */\r\n  defaultValue: PropTypes.string,\r\n}\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M22 4c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h14l4 4zm-2 13.17L18.83 16H4V4h16zM13 5h-2v4H7v2h4v4h2v-4h4V9h-4z\"\n}), 'AddCommentOutlined');","import React from 'react'\r\nimport ToolbarButton from './ToolbarButton'\r\nimport AddCommentOutlinedIcon from '@mui/icons-material/AddCommentOutlined'\r\n\r\n/**\r\n * Toolbar button for adding comments.\r\n *\r\n * The button is disabled on collapse.\r\n *\r\n * @see ToolbarButton\r\n */\r\n\r\nconst AddCommentButton = React.forwardRef((props, ref) => {\r\n  return (\r\n    <ToolbarButton\r\n      icon={<AddCommentOutlinedIcon />}\r\n      type=\"other\"\r\n      disableOnCollapse={true}\r\n      tooltip=\"Add comment\"\r\n      format=\"comment\"\r\n      ref={ref}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nexport default AddCommentButton\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2m0 16H3V5h18zM5 15h14v3H5z\"\n}), 'CallToActionOutlined');","import React from 'react'\r\nimport ToolbarButton from './ToolbarButton'\r\nimport CallToActionOutlinedIcon from '@mui/icons-material/CallToActionOutlined'\r\n\r\n/**\r\n * Toolbar button for adding endnotes\r\n *\r\n * @see ToolbarButton\r\n */\r\n\r\nconst EndnoteButton = React.forwardRef((props, ref) => {\r\n  return (\r\n    <ToolbarButton\r\n      icon={<CallToActionOutlinedIcon />}\r\n      type=\"other\"\r\n      disableOnSelection={true}\r\n      tooltip=\"Add endnote\"\r\n      format=\"endnote\"\r\n      ref={ref}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nexport default EndnoteButton\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1M8 13h8v-2H8zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5\"\n}), 'Link');","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useSlate } from 'slate-react'\r\nimport LinkIcon from '@mui/icons-material/Link'\r\n\r\nimport ToolbarButton from './ToolbarButton'\r\nimport SimpleDialog from '../SimpleDialog'\r\n\r\n/**\r\n * Toolbar button for adding links\r\n *\r\n * @see ToolbarButton\r\n */\r\nexport default function LinkButton({ ref, onMouseDown, ...props }) {\r\n  const editor = useSlate()\r\n  typeof editor.insertLink !== 'function' &&\r\n    console.error('withLinks() is not initialized')\r\n  // Handles the dialog that is opened upon clicking the Link Toolbar/HoveringBar button\r\n  const [openLinkDialog, setOpenLinkDialog] = useState(false)\r\n\r\n  // Handles custom buttons click\r\n  const onLinkButtonDown = ({ editor, ...props }) => {\r\n    if (onMouseDown) {\r\n      onMouseDown({ editor, ...props })\r\n    } else {\r\n      // When the dialog box is opened, the focus is lost as well as current selected text.\r\n      // We need to save it for later on.\r\n      editor.rememberCurrentSelection()\r\n      setOpenLinkDialog(true)\r\n    }\r\n  }\r\n\r\n  const handleDialogSave = url => {\r\n    setOpenLinkDialog(false)\r\n    // Adds the link to the editor.\r\n    // The link will wrap the selected text when `rememberCurrentSelection()` was called\r\n    editor.insertLink(url)\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ToolbarButton\r\n        icon={<LinkIcon />}\r\n        type=\"link\"\r\n        tooltip=\"Add link\"\r\n        format=\"link\"\r\n        ref={ref}\r\n        onMouseDown={event => onLinkButtonDown(event)}\r\n        {...props}\r\n      />\r\n      {!onMouseDown && (\r\n        <SimpleDialog\r\n          open={openLinkDialog}\r\n          title=\"Add Link\"\r\n          label=\"Link\"\r\n          format=\"link\"\r\n          onCancel={() => setOpenLinkDialog(false)}\r\n          onSave={({ value }) => handleDialogSave(value)}\r\n        />\r\n      )}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nLinkButton.propTypes = {\r\n  /** onMouseDown :\r\n   * disable the simple dialog and let's you add your own dialog\r\n   * And gives the onMouseDown event\r\n   */\r\n  onMouseDown: PropTypes.func,\r\n}\r\n","import React from 'react'\r\nimport { Tooltip, styled } from '@mui/material'\r\n\r\nconst StyledBox = styled(Box)(({ theme }) => ({\r\n  backgroundColor: '#e1f5fe',\r\n  cursor: 'pointer',\r\n}))\r\n\r\n/**\r\n * Renders a Comment.\r\n *  1. Adds blueish background to the text the comment wraps\r\n *  2. On hover displays the comment.\r\n *\r\n *  If `onClick` is passed, it is called if the text wrapped by the comment is clicked.\r\n *\r\n *  Expects the `element` object passed as prop to have `element.data.body` to display the comment text.\r\n *\r\n */\r\nconst CommentElement = ({\r\n  element,\r\n  onClick,\r\n  className,\r\n  children,\r\n  attributes,\r\n}) => {\r\n  return (\r\n    <Tooltip title={`Comment: ${element.data.body}`}>\r\n      <StyledBox\r\n        component=\"span\"\r\n        className={`${className}`}\r\n        {...attributes}\r\n        onClick={event => onClick && onClick({ event, element })}\r\n      >\r\n        {children}\r\n      </StyledBox>\r\n    </Tooltip>\r\n  )\r\n}\r\n\r\nexport default CommentElement\r\n","import React from 'react'\r\nimport { Box, Tooltip, styled } from '@mui/material'\r\n\r\nconst StyledBox = styled(Box)(({ theme }) => ({\r\n  cursor: 'pointer',\r\n}))\r\n\r\n/**\r\n * Displays a super index text with the index number of the endnote.\r\n * A tooltip with the content of the endnote is displayed if the user hovers the endnote.\r\n *\r\n * Expects the `element` prop to have `element.data.value` the text of the endnote (string) and\r\n * `element.data.index` the index number fo the endnote.\r\n *\r\n * If `onClick` prop is set it is called if user clicks the tex\r\n */\r\nconst EndnoteElement = ({ element, onClick, attributes, children }) => {\r\n  return (\r\n    <Tooltip placement=\"top\" title={`${element.data.value}`}>\r\n      <StyledBox\r\n        component=\"sup\"\r\n        {...attributes}\r\n        onClick={event => onClick && onClick({ event, element })}\r\n      >\r\n        {element.data.index || 'x'}\r\n        {children}\r\n      </StyledBox>\r\n    </Tooltip>\r\n  )\r\n}\r\n\r\nexport default EndnoteElement\r\n","import React from 'react'\r\nimport { useSlate } from 'slate-react'\r\nimport PropTypes from 'prop-types'\r\nimport { Typography, styled } from '@mui/material'\r\n\r\nconst Text = styled(Typography)(({ theme }) => ({\r\n  marginTop: theme.spacing(0.5),\r\n  marginLeft: theme.spacing(1),\r\n}))\r\n\r\n/**\r\n *\r\n * WordCounter for editor\r\n * It displays the number words, below the editor\r\n *  - If maxWords = 200, wordsLength = 90 `Ex: 90/200 words` will display in the counter\r\n *  - When maxWords is undefined, wordsLength = 90 `Ex: 90 words` will be displayed\r\n * Word counter will be displayed with error color, when wordLength exceeds maxWords\r\n */\r\nexport default function WordCounter({ maxWords }) {\r\n  const editor = useSlate()\r\n  const { children } = editor\r\n  // Words length\r\n  const wordsLength = editor.getWordsLength(children)\r\n  // Error based on words length limit\r\n  const errorExceedWordsLimit = wordsLength > maxWords\r\n\r\n  return (\r\n    <Text\r\n      variant=\"subtitle2\"\r\n      color=\"textSecondary\"\r\n      sx={{ ...(errorExceedWordsLimit && { color: 'error.main' }) }}\r\n    >\r\n      {maxWords ? `${wordsLength} / ${maxWords}` : wordsLength} words\r\n    </Text>\r\n  )\r\n}\r\n\r\nWordCounter.propTypes = {\r\n  /**\r\n   * To display maximum words in counter\r\n   *  - If maxWords = 200, wordsLength = 90 `Ex: 90/200 words` will display in the counter\r\n   *  - When maxWords is undefined, wordsLength = 90 `Ex: 90 words` will be displayed\r\n   */\r\n  maxWords: PropTypes.number,\r\n}\r\n","import React from 'react'\r\nimport { useSlate } from 'slate-react'\r\nimport PropTypes from 'prop-types'\r\nimport { styled } from '@mui/material/styles'\r\nimport { Typography } from '@mui/material'\r\n\r\nconst Text = styled(Typography)(({ theme }) => ({\r\n  marginTop: theme.spacing(0.5),\r\n  marginLeft: theme.spacing(1),\r\n}))\r\n\r\n/**\r\n *\r\n * CharCounter for editor\r\n * It displays the number characters in the editor\r\n *  - If maxChars = 200, charLength = 90  `Ex: 90/200 characters` will display in the counter\r\n *  - When maxChars is undefined, charLength = 90 `Ex: 90 characters` will be displayed\r\n * Char counter will be displayed with error color, when CharLength exceeds maxChars\r\n */\r\nexport default function CharCounter({ maxChars }) {\r\n  const editor = useSlate()\r\n  const { children } = editor\r\n  // Char length\r\n  const charLength = editor.getCharLength(children)\r\n  // Error based on chars length limit\r\n  const errorExceedCharsLimit = charLength > maxChars\r\n\r\n  return (\r\n    <Text\r\n      variant=\"subtitle2\"\r\n      color=\"textSecondary\"\r\n      sx={{ ...(errorExceedCharsLimit && { color: 'error.main' }) }}\r\n    >\r\n      {maxChars ? `${charLength} / ${maxChars}` : charLength} characters\r\n    </Text>\r\n  )\r\n}\r\n\r\nCharCounter.propTypes = {\r\n  /**\r\n   * To display maximum characters in counter\r\n   * - If maxChars = 200, charLength = 90  `Ex: 90/200 characters` will display in the counter\r\n   * - When maxChars is undefined, charLength = 90 `Ex: 90 characters` will be displayed\r\n   */\r\n  maxChars: PropTypes.number,\r\n}\r\n"],"names":["MaterialEditor","Editor","withBase","editor","isSelectionExpanded","selection","Range","isExpanded","isSelectionCollapsed","isFocused","ReactEditor","unwrapNode","Transforms","unwrapNodes","match","n","type","isNodeTypeActive","nodes","node","rememberedSelection","rememberCurrentSelection","isCollapsed","wrapNode","wrapSelection","insertNodes","wrapNodes","split","collapse","edge","path","last","pop","setNodes","isLast","at","syncExternalNodes","nodesToKeep","unwrap","listOfIds","map","id","unwrapNotInList","removeNotInList","nodesToKeepObj","forEach","editorNodes","findNodesByType","data","removeNodes","includes","list","listWithNodesAndPath","Array","from","listWithNodes","item","serialize","Node","string","join","syncExternalNodesWithTemporaryId","key","Object","keys","find","temporaryId","nodeToUpdate","getSelectedText","withMarks","isMarkActive","marks","mark","toggleMark","removeMark","addMark","withBlocks","LIST_TYPES","isBlockActive","block","toggleBlock","isActive","isList","selected","children","createMaterialEditor","editorId","withHistory","withReact","createEditor","withComments","isInline","COMMENT_TYPE","element","addComment","syncComments","commentsToKeep","withEndnotes","isVoid","ENDNOTE_TYPE","addEndnote","text","previousEndnoteNode","endnoteId","previous","endnotes","endnote","syncEndnotes","endnotesToKeep","withCounter","getCharLength","length","getWordsLength","content","replace","getParagraphLength","withLinks","LINK_TYPE","insertLink","url","StyledMaterialSlate","styled","Box","theme","borderRadius","shape","border","borderColor","palette","grey","primary","main","MaterialSlate","value","onChange","className","focusClassName","useState","setIsFocused","React","classes","root","propTypes","PropTypes","object","isRequired","arrayOf","func","defaultRenderElement","attributes","rest","defaultRenderLeaf","leaf","bold","code","italic","strikethrough","underlined","defaultHotkeys","StyledEditor","Editable","paddingLeft","spacing","paddingRight","paddingBottom","fontFamily","typography","MaterialEditable","renderElement","renderLeaf","placeholder","hotkeys","onHotkey","props","useSlate","handleRenderElement","useCallback","handleRenderLeaf","handleOnKeyDown","pressedKeys","isHotkey","event","hotkey","preventDefault","insertText","move","distance","unit","defaultProps","any","onHotKey","_utils","_interopRequireDefault","require$$0","_jsxRuntime","ToolbarButton","forwardRef","ref","tooltip","placement","icon","disabled","disableOnSelection","disableOnCollapse","format","onMouseDown","defaultTooltip","charAt","toUpperCase","substring","handleOnMouseDown","checkIsActive","isDisabled","CropSquareOutlined","bool","BoldButton","FormatBold","ItalicButton","FormatItalicOutlined","UnderlinedButton","FormatUnderlined","StrikethroughButton","CodeButton","BulletedListButton","FormatListBulleted","NumberedListButton","FormatListNumbered","StyledToolBar","backgroundColor","padding","Toolbar","Portal","ReactDOM","createPortal","document","body","StyledBox","position","zIndex","top","left","opacity","transition","HoveringToolbar","useRef","useEffect","el","current","removeAttribute","domSelection","window","getSelection","domRange","getRangeAt","rect","getBoundingClientRect","style","pageYOffset","offsetHeight","pageXOffset","offsetWidth","width","ButtonSeparator","other","SimpleDialog","open","title","label","defaultValue","onCancel","onSave","setValue","handleOnCancel","handleOnSave","maxWidth","TextField","target","AddCommentButton","EndnoteButton","LinkButton","console","error","openLinkDialog","setOpenLinkDialog","onLinkButtonDown","handleDialogSave","cursor","CommentElement","onClick","EndnoteElement","index","Text","Typography","marginTop","marginLeft","WordCounter","maxWords","wordsLength","errorExceedWordsLimit","color","number","CharCounter","maxChars","charLength","errorExceedCharsLimit"],"mappings":"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"}